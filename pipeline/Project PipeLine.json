{
	"name": "Project PipeLine",
	"properties": {
		"activities": [
			{
				"name": "Lookup configration",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from cfg where enabled =1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTablelinkservice",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter SQL SQLVM",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup configration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup configration').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Source,'SQLVM') ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter_Files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup configration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup configration').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Source,'Filesystem')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter SQL SQLVM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter SQL SQLVM').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().Load_flag,'Incremental')) ",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data to stg",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "Select * from @{item().Source_Table}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SqlServerlocalDB",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "Datastagelinkservice",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@{item().Dest_Table}",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Get Max of Last updated date DFG",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select Watermark_Value from dbo.cfg where Source_table like '@{item().Source_table}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AzureSqlTablelinkservice",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Copy source to datalack space",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Get Max of Last updated date DFG",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "Select \n* \nfrom @{item().Source_Table}\nWhere \nConvert(datetime,@{item().Watermark_Column}, 105) >\nConvert(datetime, \n    substring( \n        replace('@{activity('Get Max of Last updated date DFG').output.firstRow.Watermark_Value}','T','')\n        ,0,20)\n    ,120)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SqlServerlocalDB",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "Datastagelinkservice",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@{item().Dest_Table}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Mapping dataflow",
										"type": "ExecuteDataFlow",
										"dependsOn": [
											{
												"activity": "Copy source to datalack space",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "1.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataflow": {
												"referenceName": "dataflow1",
												"type": "DataFlowReference",
												"parameters": {
													"sourcetable": "$sourcetable",
													"watermark_feild": "$watermark_feild"
												},
												"datasetParameters": {
													"source1": {
														"filename": {
															"value": "@{item().Dest_Table}",
															"type": "Expression"
														}
													}
												}
											},
											"compute": {
												"coreCount": 8,
												"computeType": "General"
											},
											"traceLevel": "Fine"
										}
									}
								]
							}
						},
						{
							"name": "Lookup3",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "update cfg \nSet status ='Succeeded'\nwhere Dest_Table ='@{item().Dest_Table}'\n\nSelect 1",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTablelinkservice",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Filter_Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Localfile",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Datastagelinkservice",
						"type": "DatasetReference",
						"parameters": {
							"filename": "Product-Category-Subcategory.Csv"
						}
					}
				]
			},
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Update cfg\nset status ='Succeeded'\nwhere Dest_Table ='Product-Category-Subcategory'\nSelect 1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTablelinkservice",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": []
	}
}