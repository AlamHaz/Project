{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FactTranscation",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DimProductCat",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "Dimdate",
						"type": "DatasetReference"
					},
					"name": "Dimdate"
				},
				{
					"dataset": {
						"referenceName": "DimStore",
						"type": "DatasetReference"
					},
					"name": "dimstore"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactTracscation_DB",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Dimcustomeroutput"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          transaction_id as string,",
				"          cust_id as string,",
				"          tran_date as string,",
				"          prod_subcat_code as string,",
				"          prod_cat_code as string,",
				"          Qty as string,",
				"          Rate as string,",
				"          Tax as string,",
				"          total_amt as string,",
				"          Store_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          customer_key as integer,",
				"          customer_Id as integer,",
				"          customer_name as string,",
				"          DOB as string,",
				"          city_code as string,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          Prod_Cat_SubCat_Key as integer,",
				"          Product_Cat_Code as integer,",
				"          Product_Category as string,",
				"          Product_SubCat_Code as integer,",
				"          Product_SubCategory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          DateKey as integer,",
				"          Date as date,",
				"          FullDateUK as string,",
				"          FullDateUSA as string,",
				"          DayOfMonth as string,",
				"          DaySuffix as string,",
				"          DayName as string,",
				"          DayOfWeekUSA as string,",
				"          DayOfWeekUK as string,",
				"          DayOfWeekInMonth as string,",
				"          DayOfWeekInYear as string,",
				"          DayOfQuarter as string,",
				"          DayOfYear as string,",
				"          WeekOfMonth as string,",
				"          WeekOfQuarter as string,",
				"          WeekOfYear as string,",
				"          Month as string,",
				"          MonthName as string,",
				"          MonthOfQuarter as string,",
				"          Quarter as string,",
				"          QuarterName as string,",
				"          Year as string,",
				"          YearName as string,",
				"          MonthYear as string,",
				"          MMYYYY as string,",
				"          FirstDayOfMonth as date,",
				"          LastDayOfMonth as date,",
				"          FirstDayOfQuarter as date,",
				"          LastDayOfQuarter as date,",
				"          FirstDayOfYear as date,",
				"          LastDayOfYear as date,",
				"          IsHolidayUSA as boolean,",
				"          IsWeekday as boolean,",
				"          HolidayUSA as string,",
				"          IsHolidayUK as boolean,",
				"          HolidayUK as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Dimdate",
				"source(output(",
				"          Store_Key as integer,",
				"          Store_Type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimstore",
				"source1, source2 join(toInteger(cust_id) == customer_Id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Dimcustomeroutput",
				"Dimcustomeroutput, source3 join(toInteger(prod_cat_code) == Product_Cat_Code",
				"     && toInteger(prod_subcat_code) == Product_SubCat_Code,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, Dimdate join(toDate(tran_date,'MM-dd-yyyy') == Date,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, dimstore join(source1@Store_type == dimstore@Store_Type,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 derive(Qty_int = toInteger(Qty),",
				"          rate_float = toFloat(Rate),",
				"          Tax_float = toFloat(Tax),",
				"          Amount_float = toFloat(total_amt)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Fact_Tran_Key as integer,",
				"          customer_key as integer,",
				"          Prod_Cat_SubCat_Key as integer,",
				"          Store_Key as integer,",
				"          tran_date as integer,",
				"          Quantity as integer,",
				"          rate as double,",
				"          tax as double,",
				"          total_amount as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customer_key,",
				"          Prod_Cat_SubCat_Key,",
				"          Store_Key,",
				"          tran_date = DateKey,",
				"          Quantity = Qty_int,",
				"          rate = rate_float,",
				"          tax = Tax_float,",
				"          total_amount = Amount_float",
				"     )) ~> sink1"
			]
		}
	}
}